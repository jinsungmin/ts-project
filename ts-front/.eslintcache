[{"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\index.tsx":"1","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\reportWebVitals.ts":"2","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\App.tsx":"3","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\Init.tsx":"4","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\init.tsx":"5","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\game.tsx":"6","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\cell.tsx":"7","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\index.ts":"8","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\index.ts":"9","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\actions.ts":"10","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\reducer.ts":"11","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\types.ts":"12","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useObjects.ts":"13","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddObject.tsx":"14","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeObject.tsx":"15","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeLogged.tsx":"16","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useLogged.tsx":"17","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\index.ts":"18","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\types.ts":"19","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\actions.ts":"20","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\reducer.ts":"21","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\index.ts":"22","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\reducer.ts":"23","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\actions.ts":"24","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\types.ts":"25","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useUser.tsx":"26","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeUser.tsx":"27","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddUser.tsx":"28","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\main.tsx":"29","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\gameSolo.tsx":"30","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useRemoveObject.tsx":"31","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\rootFinding.tsx":"32","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\promotion.tsx":"33","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\signup.tsx":"34"},{"size":704,"mtime":1609759974365,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1608957373882,"results":"37","hashOfConfig":"36"},{"size":806,"mtime":1611212742349,"results":"38","hashOfConfig":"36"},{"size":3177,"mtime":1609594545003,"results":"39","hashOfConfig":"36"},{"size":3843,"mtime":1611212956391,"results":"40","hashOfConfig":"36"},{"size":18488,"mtime":1611201177616,"results":"41","hashOfConfig":"36"},{"size":3337,"mtime":1609660300292,"results":"42","hashOfConfig":"36"},{"size":301,"mtime":1609929103864,"results":"43","hashOfConfig":"36"},{"size":332,"mtime":1609760777760,"results":"44","hashOfConfig":"36"},{"size":916,"mtime":1611201138075,"results":"45","hashOfConfig":"36"},{"size":1127,"mtime":1611201131033,"results":"46","hashOfConfig":"36"},{"size":363,"mtime":1610866476417,"results":"47","hashOfConfig":"36"},{"size":216,"mtime":1609774657191,"results":"48","hashOfConfig":"36"},{"size":346,"mtime":1609774644615,"results":"49","hashOfConfig":"36"},{"size":394,"mtime":1611201151300,"results":"50","hashOfConfig":"36"},{"size":323,"mtime":1609906277896,"results":"51","hashOfConfig":"36"},{"size":212,"mtime":1609904582242,"results":"52","hashOfConfig":"36"},{"size":332,"mtime":1609906416098,"results":"53","hashOfConfig":"36"},{"size":249,"mtime":1609928702864,"results":"54","hashOfConfig":"36"},{"size":315,"mtime":1609906414731,"results":"55","hashOfConfig":"36"},{"size":480,"mtime":1609928709269,"results":"56","hashOfConfig":"36"},{"size":332,"mtime":1610364576113,"results":"57","hashOfConfig":"36"},{"size":780,"mtime":1610812574529,"results":"58","hashOfConfig":"36"},{"size":529,"mtime":1610364571528,"results":"59","hashOfConfig":"36"},{"size":276,"mtime":1610812577581,"results":"60","hashOfConfig":"36"},{"size":204,"mtime":1609929442571,"results":"61","hashOfConfig":"36"},{"size":357,"mtime":1610364526397,"results":"62","hashOfConfig":"36"},{"size":345,"mtime":1610364507359,"results":"63","hashOfConfig":"36"},{"size":6950,"mtime":1610812824246,"results":"64","hashOfConfig":"36"},{"size":15100,"mtime":1611211274736,"results":"65","hashOfConfig":"36"},{"size":298,"mtime":1610622543031,"results":"66","hashOfConfig":"36"},{"size":9406,"mtime":1611143393966,"results":"67","hashOfConfig":"36"},{"size":2339,"mtime":1611209509929,"results":"68","hashOfConfig":"36"},{"size":5743,"mtime":1611238532424,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"yc7640",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\index.tsx",[],["148","149"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\reportWebVitals.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\App.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\Init.tsx",["150","151","152","153","154"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\init.tsx",["155","156","157","158","159","160","161","162","163"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useChangeLogged from '../../hooks/useChangeLogged';\r\nimport useLogged from '../../hooks/useLogged';\r\n\r\nimport useChangeUser from '../../hooks/useChangeUser';\r\nimport useAddUser from '../../hooks/useAddUser';\r\nimport useUser from '../../hooks/useUser';\r\nimport { User } from '../../modules/user';\r\n\r\nimport {\r\n  Button,\r\n  Form,\r\n  Card,\r\n} from \"react-bootstrap\";\r\n\r\nimport { useCookies } from \"react-cookie\";\r\nimport { set } from \"js-cookie\";\r\n\r\nconst Init = () => {\r\n  const Logged = useLogged();\r\n  const User = useUser();\r\n  const addUser = useAddUser();\r\n\r\n  const changeLogged = useChangeLogged();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  let history = useHistory();\r\n\r\n  const submitHandler = (event: any): void => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n\r\n    axios\r\n      .post(`/api/auth/login`, user)\r\n      .then((res) => {\r\n        console.log('data:', res.data);\r\n\r\n        changeLogged(true, email);\r\n        addUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\r\n        history.push(\"/home\");\r\n      })\r\n      .catch((error) => {\r\n        alert('error');\r\n      });\r\n\r\n    //console.log(User);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"10rem\" }}>\r\n      </div>\r\n      <div >\r\n        <Card border=\"info\" style={{ width: \"30%\", height: \"20%\", float: 'right', marginRight: '5%' }}>\r\n          <div className=\"row h-100 justify-content-center align-items-center\">\r\n            <form onSubmit={submitHandler} className=\"col-10\">\r\n              <br />\r\n              <h2 style={{ fontWeight: \"bolder\", textAlign: 'center' }}>로그인</h2>\r\n              <hr />\r\n\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form inline>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={({ target: { value } }) => setEmail(value)}\r\n                    placeholder=\"이메일을 입력하세요.\"\r\n                  />\r\n                </Form>\r\n                <Form inline>\r\n                  <Form.Label style={{ width: \"10rem\" }}></Form.Label>\r\n                  <Form.Text className=\"text-muted\">\r\n                    이메일 형식에 맞게 입력해주세요.\r\n                      </Form.Text>\r\n                </Form>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form inline>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    style={{ width: \"100%\" }}\r\n                    onChange={({ target: { value } }) => setPassword(value)}\r\n                    placeholder=\"비밀번호를 입력하세요.\"\r\n                  />\r\n                </Form>\r\n              </Form.Group>\r\n\r\n              <button type=\"submit\" className=\"btn btn-info btn-block\">\r\n                로그인하기\r\n              </button>\r\n\r\n              <div className=\"App-wrapper\" style={{width: '100%'}}>\r\n                <p className=\"forgot-password text-center\">\r\n                  <Link to='/signup' style={{ textDecoration: 'none', color:'black' }}>\r\n                    회원가입 |{\" \"}\r\n                  </Link>\r\n                  <a>\r\n                    비밀번호 찾기\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Init;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\game.tsx",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184"],"import React, { useEffect, useState, useCallback } from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Cell from './cell';\r\n\r\nimport io from 'socket.io-client';\r\nimport queryString from 'query-string';\r\n\r\nimport {\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nimport useObjects from '../../hooks/useObjects';\r\nimport useAddObject from '../../hooks/useAddObject';\r\nimport useChangeObject from '../../hooks/useChangeObject';\r\n\r\nimport black_king from '../../images/black_king.png';\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\nimport black_pawn from '../../images/black_pawn.png';\r\n\r\nimport white_king from '../../images/white_king.png';\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\nimport white_pawn from '../../images/white_pawn.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useUser from '../../hooks/useUser';\r\nimport useRemoveObject from '../../hooks/useRemoveObject';\r\nimport useAddUser from '../../hooks/useAddUser';\r\nimport { isNotEmittedStatement } from 'typescript';\r\n\r\nconst CELL_SIZE = 60;\r\nconst BOARD_SIZE = 8;\r\nconst boardWidth = CELL_SIZE * BOARD_SIZE;\r\n\r\nlet socket: any;\r\n\r\nlet grid = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n  return Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n    return { click: 0, object: true, root: false, color: 0 }\r\n  });\r\n});\r\n\r\nfor (var i = 0; i < BOARD_SIZE; i++) {\r\n  grid[0][i].object = false;\r\n  grid[1][i].object = false;\r\n  grid[6][i].object = false;\r\n  grid[7][i].object = false;\r\n\r\n  grid[0][i].color = 1;\r\n  grid[1][i].color = 1;\r\n  grid[6][i].color = -1;\r\n  grid[7][i].color = -1;\r\n}\r\n\r\nconst Game = ({ location }: { location: any }) => {\r\n  const User = useUser();\r\n  const Objects = useObjects();\r\n  const addObject = useAddObject();\r\n  const changeObject = useChangeObject();\r\n  const removeObject = useRemoveObject();\r\n  const addUser = useAddUser();\r\n\r\n  const [board, setBoard] = useState(grid);\r\n  const [turn, setTurn] = useState(1);\r\n  const [clicked, setClicked] = useState({ row: -1, col: -1 });\r\n  const [roomID, setRoomID] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [move, setMove] = useState(false);\r\n\r\n  const [connected, setConnected] = useState(false);\r\n  const [take, setTake] = useState(false);\r\n  const [type, setType] = useState('');\r\n\r\n  const [dataIO, setDataIO] = useState(null);\r\n\r\n  let history = useHistory();\r\n\r\n  const ENDPOINT = 'localhost:8080';\r\n\r\n  useEffect(() => {\r\n    if (Objects.length < 32) {\r\n      addObject('king', 4, 0, black_king, false);\r\n      addObject('queen', 3, 0, black_queen, false);\r\n      addObject('rook', 0, 0, black_rook, false);\r\n      addObject('rook', 7, 0, black_rook, false);\r\n      addObject('knight', 1, 0, black_knight, false);\r\n      addObject('knight', 6, 0, black_knight, false);\r\n      addObject('bishop', 2, 0, black_bishop, false);\r\n      addObject('bishop', 5, 0, black_bishop, false);\r\n\r\n      addObject('king', 4, 7, white_king, true);\r\n      addObject('queen', 3, 7, white_queen, true);\r\n      addObject('rook', 0, 7, white_rook, true);\r\n      addObject('rook', 7, 7, white_rook, true);\r\n      addObject('knight', 1, 7, white_knight, true);\r\n      addObject('knight', 6, 7, white_knight, true);\r\n      addObject('bishop', 2, 7, white_bishop, true);\r\n      addObject('bishop', 5, 7, white_bishop, true);\r\n\r\n      for (var i = 0; i < 8; i++) {\r\n        addObject('pawn', i, 1, black_pawn, false);\r\n        addObject('pawn', i, 6, white_pawn, true);\r\n      }\r\n    }\r\n    console.log('user:', User);\r\n    console.log('reload');\r\n\r\n    const { roomID, username } = queryString.parse(location.search);\r\n\r\n    if (typeof (roomID) === 'string' && typeof (username) === 'string') {\r\n      setRoomID(roomID);\r\n      setUsername(username);\r\n    }\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('roomConnect', { roomID: roomID, username: User[0].username }, () => {\r\n      setConnected(!connected);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('removeRoom', { roomID: roomID });\r\n      socket.off();\r\n    }\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    //console.log(location.search);\r\n    const { roomID, username } = queryString.parse(location.search);\r\n\r\n    if (typeof (roomID) === 'string' && typeof (username) === 'string') {\r\n      setRoomID(roomID);\r\n      setUsername(username);\r\n    }\r\n\r\n    socket = io(ENDPOINT);\r\n\r\n    socket.emit('roomConnect', { roomID: roomID, username: User[0].username }, () => {\r\n      setConnected(!connected);\r\n    });\r\n\r\n    return () => {\r\n      socket.emit('removeRoom', { roomID: roomID });\r\n      socket.off();\r\n    }\r\n  }, [ENDPOINT, location.search]);\r\n  */\r\n  useEffect(() => {\r\n    socket.on('match', ({ roomID }: any) => {\r\n      setRoomID(roomID);\r\n      socket.emit('selectColor', { roomID: roomID }, () => {\r\n        setTake(!take);\r\n      })\r\n    });\r\n  }, [connected]);\r\n\r\n  useEffect(() => {\r\n    socket.on('setColor', ({ black, white, roomID }: any) => {\r\n      setRoomID(roomID);\r\n\r\n      axios.get(`/api/user/`)\r\n        .then((res) => {\r\n          if (black === res.data.user.username) {\r\n            setType('black');\r\n            setTurn(1);\r\n          } else if (white === res.data.user.username) {\r\n            setType('white');\r\n            setTurn(1);\r\n          }\r\n          //setUsername(res.data.user.username);\r\n        })\r\n        .catch((error) => {\r\n          alert('error');\r\n        });\r\n    })\r\n  }, [take]);\r\n\r\n  // 상대방의 움직임 반영\r\n  useEffect(() => {\r\n    socket.on('loadMove', ({ roomID, username, data, turn }: any) => {\r\n      //setDataIO(data);\r\n\r\n      // 상대방의 움직임에 따른 보드 변화\r\n      grid = data.grid;\r\n\r\n      console.log('type:', type, 'turn:', turn, data);\r\n\r\n      setBoard([...grid]);\r\n      setTurn(turn);\r\n      for (let i = 0; i < data.object.length; i++) {\r\n        changeObject(data.object[i].id, data.object[i].row, data.object[i].col, data.object[i].lived, data.object[i].isMoved, data.object[i].image, data.object[i].name);\r\n        if(!data.object[i].lived && data.object[i].object === 'king') {\r\n          alert('game set');\r\n        }\r\n      }\r\n    });\r\n  }, [move]);\r\n\r\n  const isInside = (row: number, col: number) => {\r\n    return row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE;\r\n  }\r\n\r\n  const clickControl = (rowIdx: number, colIdx: number) => {\r\n    console.log('click:', rowIdx, colIdx);\r\n    let grid = board;\r\n\r\n    init(grid, 'click', 0);\r\n\r\n    if (grid[rowIdx][colIdx].root) { // 이동 가능한 루트를 클릭했을 시\r\n      const object: any = Objects.find((element) => { return element.y === clicked.row && element.x === clicked.col && element.lived });  // 선택했던 기물\r\n\r\n      // 기물의 위치를 해당 위치로 수정\r\n      const destObject: any = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });  // 목적지의 기물\r\n      let objectName = '';\r\n\r\n      let objectChange = [];\r\n\r\n      if (destObject) {\r\n        objectName = destObject.name;\r\n        changeObject(destObject.id, colIdx, rowIdx, false, true, destObject.image, destObject.name);\r\n        objectChange.push({ id: destObject.id, row: colIdx, col: rowIdx, lived: false, isMoved: true, object: objectName });\r\n      }\r\n\r\n      changeObject(object.id, colIdx, rowIdx, true, true, object.image, object.name);\r\n      objectChange.push({ id: object.id, row: colIdx, col: rowIdx, lived: true, isMoved: true, object: objectName });\r\n\r\n      grid[clicked.row][clicked.col].object = true;\r\n      grid[rowIdx][colIdx].object = false;\r\n\r\n      if (!object.color) {\r\n        grid[rowIdx][colIdx].color = 1;\r\n      } else {\r\n        grid[rowIdx][colIdx].color = -1;\r\n      }\r\n\r\n      if (objectName === 'king') {\r\n        console.log('game set');\r\n      }\r\n      //setTurn(turn + 1);\r\n\r\n      init(grid, 'root', false);\r\n\r\n      let data = {\r\n        grid: grid,\r\n        object: objectChange,\r\n      };\r\n\r\n      socket.emit('moveObject', { roomID: roomID, username: username, data: data, turn: turn }, () => {\r\n        setMove(!move);\r\n      })\r\n    } else {\r\n      grid[rowIdx][colIdx].click++;\r\n\r\n      setBoard([...grid]);\r\n\r\n      const object = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });\r\n\r\n      console.log(object);\r\n\r\n      setClicked({ row: rowIdx, col: colIdx });\r\n      searchRoot(object);\r\n    }\r\n  }\r\n\r\n  const init = (object: any, attr: any, value: any) => {\r\n    for (var i = 0; i < BOARD_SIZE; i++) {\r\n      for (var j = 0; j < BOARD_SIZE; j++) {\r\n        if (object[i][j][attr]) {\r\n          object[i][j][attr] = value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const searchRoot = (object: any) => {\r\n    let grid = board;\r\n\r\n    init(grid, 'root', false);\r\n\r\n    let color: number = 0;\r\n    let initPos = 0;\r\n    let dir: any;\r\n    if (object.color) {\r\n      color = -1;\r\n      initPos = 7;\r\n    } else {\r\n      initPos = 0;\r\n      color = 1;\r\n    }\r\n\r\n    switch (object.name) {\r\n      case 'pawn':\r\n        if (object.y == initPos + 1 * color) {\r\n          if (grid[object.y + 2 * color][object.x].object && grid[object.y + 1 * color][object.x].object)\r\n            grid[object.y + 2 * color][object.x].root = true;\r\n        }\r\n        if (isInside(object.y + 1 * color, object.x + 1) && !grid[object.y + 1 * color][object.x + 1].object && grid[object.y + 1 * color][object.x + 1].color === -1 * color) {\r\n          grid[object.y + 1 * color][object.x + 1].root = true;\r\n        }\r\n        if (isInside(object.y + 1 * color, object.x - 1) && !grid[object.y + 1 * color][object.x - 1].object && grid[object.y + 1 * color][object.x - 1].color === -1 * color) {\r\n          grid[object.y + 1 * color][object.x - 1].root = true;\r\n        }\r\n\r\n        if (isInside(object.y + 1 * color, object.x) && grid[object.y + 1 * color][object.x].object)\r\n          grid[object.y + 1 * color][object.x].root = true;\r\n        // 앙파상, 승진 구현\r\n\r\n        setBoard([...grid]);\r\n\r\n        console.log('board:', board);\r\n        break;\r\n      case 'knight':\r\n        let dir_first = [[-1, 0], [0, 1], [1, 0], [0, -1]];\r\n        let dir_second = [[-1, -1], [-1, 1], [1, 1], [1, -1]];\r\n\r\n        for (var i = 0; i < dir_first.length; i++) {\r\n          for (var cnt: number = 0; cnt < 2; cnt++) {\r\n            var j: number = i + cnt;\r\n            if (j === 4) {\r\n              j -= 4;\r\n            }\r\n\r\n            if (isInside(object.y + dir_first[i][0] + dir_second[j][0], object.x + dir_first[i][1] + dir_second[j][1])) {\r\n              if (!grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].object) {\r\n                if (grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].color === -1 * color) {\r\n                  grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n                }\r\n              } else {\r\n                grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n              }\r\n            }\r\n\r\n          }\r\n        }\r\n        setBoard([...grid]);\r\n        break;\r\n      case 'rook':\r\n        dir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n        rootFromDir(dir, object, color);\r\n\r\n        // 캐슬링 구현\r\n\r\n        break;\r\n      case 'bishop':\r\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n        rootFromDir(dir, object, color);\r\n        break;\r\n      case 'king':\r\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\r\n        for (var i = 0; i < dir.length; i++) {\r\n          if (isInside(object.y + dir[i][0], object.x + dir[i][1])) {\r\n            if (!grid[object.y + dir[i][0]][object.x + dir[i][1]].object) {\r\n              if (grid[object.y + dir[i][0]][object.x + dir[i][1]].color === -1 * color) {\r\n                grid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n              }\r\n            } else {\r\n              grid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        // 캐슬링 구현\r\n\r\n        setBoard([...grid]);\r\n        break;\r\n      case 'queen':\r\n        dir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n        rootFromDir(dir, object, color);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const rootFromDir = (dir: any, object: any, color: number) => {\r\n    for (var i = 0; i < dir.length; i++) {\r\n      var cnt = 1;\r\n      while (isInside(object.y + dir[i][0] * cnt, object.x + dir[i][1] * cnt)) {\r\n        // 기물이 존재하고 같은 색일때,\r\n        if (!grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].object) {\r\n          if (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === color) {\r\n            break;\r\n          }\r\n          if (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === -1 * color) {\r\n            grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n            break;\r\n          }\r\n        } else {\r\n          grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n        }\r\n        cnt++;\r\n      }\r\n    }\r\n    setBoard([...grid]);\r\n  }\r\n\r\n  const checkDisabled = (rowIdx: number, colIdx: number) => {\r\n    if ((type === 'black' && turn % 2 === 1) || (type === 'white' && turn % 2 === 0)) {\r\n      if (board[rowIdx][colIdx].object) {\r\n        if (board[rowIdx][colIdx].root) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      } else {\r\n        if (board[rowIdx][colIdx].root) {\r\n          return false;\r\n        }\r\n        if ((board[rowIdx][colIdx].color === 1 && (turn % 2) === 1) || (board[rowIdx][colIdx].color === -1 && (turn % 2) === 0)) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  const checkColor = (color: string, rowIdx: number, colIdx: number) => {\r\n    if (board[rowIdx][colIdx].root) {\r\n      return \"#cccccc\";\r\n    } else {\r\n      return color;\r\n    }\r\n  }\r\n\r\n  const initState = () => {\r\n    grid = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n      return Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n        return { click: 0, object: true, root: false, color: 0 }\r\n      });\r\n    });\r\n    \r\n    for (var i = 0; i < BOARD_SIZE; i++) {\r\n      grid[0][i].object = false;\r\n      grid[1][i].object = false;\r\n      grid[6][i].object = false;\r\n      grid[7][i].object = false;\r\n    \r\n      grid[0][i].color = 1;\r\n      grid[1][i].color = 1;\r\n      grid[6][i].color = -1;\r\n      grid[7][i].color = -1;\r\n    }\r\n    setBoard(grid);\r\n    setTurn(1);\r\n  }\r\n\r\n  const backToHome = () => {\r\n    Objects.map(object => {\r\n      removeObject(object.id);\r\n    })\r\n\r\n    //initState();\r\n    history.push('/home');\r\n    window.location.reload();\r\n  }\r\n\r\n  const renderBoard = () => {\r\n    return Array.apply(null, Array(BOARD_SIZE)).map((el, rowIdx) => {\r\n      let cellList = Array.apply(null, Array(BOARD_SIZE)).map((el, colIdx) => {\r\n        return (\r\n          <div>\r\n            {(rowIdx + colIdx) % 2 === 0 ? <button onClick={() => clickControl(rowIdx, colIdx)} disabled={checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#996600', rowIdx, colIdx), border: '1px solid black' }}>\r\n              {Objects.map((object, index)=> {\r\n                if (object.x === colIdx && object.y === rowIdx && object.lived)\r\n                  return <img key={index} src={object.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n              })}\r\n            </button> :\r\n              <button onClick={() => clickControl(rowIdx, colIdx)} disabled={checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#ffcc66', rowIdx, colIdx), border: '1px solid black' }}>\r\n                {Objects.map((object, index) => {\r\n                  if (object.x === colIdx && object.y === rowIdx && object.lived) {\r\n                    return <img key={index} src={object.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n                  }\r\n                })}\r\n              </button>\r\n            }\r\n          </div>\r\n        )\r\n      });\r\n\r\n      return (\r\n        <div\r\n          key={rowIdx}\r\n          style={{\r\n            width: boardWidth,\r\n            height: CELL_SIZE,\r\n            display: 'flex',\r\n            alignItems: 'flex-start'\r\n          }}>\r\n          {cellList}\r\n        </div>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div style={{ marginLeft: '5%', marginTop: '5%', float: 'left' }}>\r\n        {renderBoard()}\r\n      </div>\r\n      <div style={{ marginLeft: '5%', marginTop: '5%', float: 'left', width: '30%', textAlign: 'center' }}>\r\n        <div >\r\n          {turn % 2 === 1 ? <div style={{ fontSize: '1.5rem' }}>BLACK TURN {turn}</div> : <div style={{ fontSize: '1.5rem' }}>WHITE TURN {turn}</div>}\r\n        </div>\r\n        <div style={{ textAlign: 'left', fontSize: '1.2rem' }}>\r\n          Black&nbsp;&nbsp;Dead\r\n        </div>\r\n        <div style={{ textAlign: 'left' }}>\r\n\r\n          {Objects.map((object, index) => {\r\n            if (!object.lived && !object.color) {\r\n              return <img key={index} src={object.image} style={{ width: '25px', height: '30px', paddingRight: '3px' }} />\r\n            }\r\n          })}\r\n        </div>\r\n        <div style={{ textAlign: 'left', fontSize: '1.2rem' }}>\r\n          White Dead\r\n        </div>\r\n        <div style={{ textAlign: 'left' }}>\r\n          {Objects.map((object, index) => {\r\n            if (!object.lived && object.color) {\r\n              return <img key={index} src={object.image} style={{ width: '25px', height: '30px', paddingRight: '3px' }} />\r\n            } \r\n          })}\r\n        </div>\r\n        <div>\r\n          <Button variant=\"dark\" onClick={backToHome}>뒤로 가기</Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\cell.tsx",["185","186","187","188","189","190","191"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {Button} from 'react-bootstrap';\r\n\r\nimport black_king from '../../images/black_king.png';\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\nimport black_pawn from '../../images/black_pawn.png';\r\n\r\nimport white_king from '../../images/white_king.png';\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\nimport white_pawn from '../../images/white_pawn.png';\r\nimport { isNonNullExpression } from 'typescript';\r\n\r\nconst black = [black_king, black_queen, black_rook, black_knight, black_bishop, black_pawn];\r\nconst white = [white_king, white_queen, white_rook, white_knight, white_bishop, white_pawn];\r\n\r\nconst Cell = ({ key, width, height, x, y }: any) => {\r\n\tconst [object, setObject] = useState({\r\n\t\tname: 'empty',\r\n\t\tx: -1,\r\n\t\ty: -1,\r\n\t\tlived: true,\r\n\t\timage: '',\r\n\t\ttype:'',\r\n\t});\r\n\tuseEffect(() => {\r\n\r\n\t\tif (y === 0) {\r\n\t\t\tif (x === 4) setObject({ name: 'black_king', x: x, y: y, lived: true, image: black_king, type: 'black' });\r\n\t\t\tif (x === 3) setObject({ name: 'black_queen', x: x, y: y, lived: true, image: black_queen, type: 'black' });\r\n\t\t\tif (x === 2 || x === 5) setObject({ name: 'black_bishop', x: x, y: y, lived: true, image: black_bishop, type: 'black' });\r\n\t\t\tif (x === 1 || x === 6) setObject({ name: 'black_knight', x: x, y: y, lived: true, image: black_knight, type: 'black' });\r\n\t\t\tif (x === 0 || x === 7) setObject({ name: 'black_rook', x: x, y: y, lived: true, image: black_rook, type: 'black' });\r\n\t\t}\r\n\t\tif (y === 1) {\r\n\t\t\tsetObject({ name: 'black_pawn', lived: true, x: x, y: y, image: black_pawn, type: 'black' });\r\n\t\t}\r\n\r\n\t\tif (y === 7) {\r\n\t\t\tif (x === 4) setObject({ name: 'white_king', x: x, y: y, lived: true, image: white_king, type: 'white' });\r\n\t\t\tif (x === 3) setObject({ name: 'white_queen', x: x, y: y, lived: true, image: white_queen, type: 'white' });\r\n\t\t\tif (x === 2 || x === 5) setObject({ name: 'white_bishop', x: x, y: y, lived: true, image: white_bishop, type: 'white' });\r\n\t\t\tif (x === 1 || x === 6) setObject({ name: 'white_knight', x: x, y: y, lived: true, image: white_knight, type: 'white' });\r\n\t\t\tif (x === 0 || x === 7) setObject({ name: 'white_rook', x: x, y: y, lived: true, image: white_rook, type: 'white' });\r\n\t\t}\r\n\t\tif (y === 6) {\r\n\t\t\tsetObject({ name: 'white_pawn', lived: true, x: x, y: y, image: white_pawn, type: 'white' });\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{(x + y) % 2 === 0 ? <button style={{ width: width, height: height, backgroundColor: '#996600', border: 0}}>\r\n\t\t\t\t{(x === object.x && y === object.y && object.lived) &&\r\n\t\t\t\t\t<img src={object.image} style={{width: width - 10, height: height - 10 }} />\r\n\t\t\t\t}\r\n\r\n\t\t\t</button> :\r\n\t\t\t\t<button style={{ width: width, height: height, backgroundColor: '#ffcc66', border: 0 }}>\r\n\t\t\t\t\t{(x === object.x && y === object.y && object.lived) &&\r\n\t\t\t\t\t\t<img src={object.image} style={{width: width - 10, height: height - 10 }} />\r\n\t\t\t\t\t}\r\n\t\t\t\t</button>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Cell;\r\n\r\n",["192","193"],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\objects\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useObjects.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useLogged.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\logged\\reducer.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\index.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\reducer.ts",["194","195"],"import { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\nimport { createReducer } from \"typesafe-actions\";\r\nimport { setConstantValue } from \"typescript\";\r\nimport { ADD_USER, CHANGE_USER } from \"./actions\";\r\nimport { UserAction, UserState } from \"./types\";\r\n\r\n// 초깃값 설정\r\nconst initialState: UserState = [];\r\n\r\nconst user = createReducer<UserState, UserAction>(initialState, {\r\n  [ADD_USER]: (state, { payload }) =>\r\n    state.concat({\r\n      email: payload.email,\r\n      username: payload.username,\r\n      win: payload.win,\r\n      lose: payload.lose,\r\n    }), \r\n  [CHANGE_USER]: (state, { payload }) =>\r\n    state.map(user => true ? ({ email: payload.email, username: payload.username, win: payload.win, lose: payload.lose }) : user),\r\n});\r\nexport default user;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\actions.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\modules\\user\\types.ts",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useChangeUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useAddUser.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\main.tsx",["196","197","198","199","200","201","202","203","204","205","206"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useChangeLogged from '../../hooks/useChangeLogged';\r\nimport useLogged from '../../hooks/useLogged';\r\n\r\nimport useChangeUser from '../../hooks/useChangeUser';\r\nimport useAddUser from '../../hooks/useAddUser';\r\nimport useUser from '../../hooks/useUser';\r\nimport { addUser, User } from '../../modules/user';\r\nimport { useCookies } from \"react-cookie\";\r\nimport queryString from 'query-string';\r\nimport io from 'socket.io-client';\r\n\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nconst ENDPOINT = 'localhost:8080';\r\nlet socket: any;\r\n\r\nconst Main = ({ location }: { location: any }) => {\r\n\tconst Logged = useLogged();\r\n\tconst User = useUser();\r\n\tconst addUser = useAddUser();\r\n\tconst changeUser = useChangeUser();\r\n\tconst changeLogged = useChangeLogged();\r\n\tconst [roomList, setroomList] = useState<any[]>([{ id: '', name: '' }]);\r\n\tconst [userList, setUserList] = useState<any[]>([{ id: '', name: '' }]);\r\n\r\n\tconst [request, setRequest] = useState(false);\r\n\tconst [confirm, setConfirm] = useState({ type: 'send', username: null, roomID: null });\r\n\r\n\tlet [cookies] = useCookies([\"access_token\"]);\r\n\tlet history = useHistory();\r\n\r\n\tconst readCookie = async () => {\r\n\t\tif (cookies.access_token) {\r\n\t\t\t// 쿠키에 access_token이 존재하면 로그인 상태 유지\r\n\t\t\tloadUser();\r\n\r\n\t\t} else {\r\n\t\t\thistory.push(\"/\");\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket = io(ENDPOINT);\r\n\r\n\t\treadCookie();\r\n\t}, [])\r\n\r\n\tconst loadUser = async () => {\r\n\t\tawait axios.get(`/api/user/`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tif (User.length === 0) {\r\n\t\t\t\t\taddUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchangeUser(res.data.user.email, res.data.user.username, res.data.user.win, res.data.user.lose);\r\n\t\t\t\t}\r\n\t\t\t\tchangeLogged(true, res.data.user.email);\r\n\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\talert('error');\r\n\t\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (User.length) {\r\n\t\t\tsocketio();\r\n\t\t}\r\n\r\n\t}, [ENDPOINT, location.search, User]);\r\n\r\n\tconst socketio = () => {\r\n\t\t//socket = io(ENDPOINT);\r\n\r\n\t\tlet name = User[0].username;\r\n\t\tconsole.log('name:', name);\r\n\r\n\t\tsocket.emit('login', name, () => {\r\n\t\t\t//set_socket(!_socket);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.emit('disconnect');\r\n\r\n\t\t\tsocket.off();\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('sendUser', ({ users }: any) => {\r\n\t\t\tsetUserList(users);\r\n\t\t});\r\n\t\tconsole.log('userList:', userList);\r\n\r\n\t}, [userList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('sendRoom', ({ rooms }: any) => {\r\n\t\t\tsetroomList(rooms);\r\n\t\t});\r\n\t\tconsole.log('roomList:', roomList);\r\n\r\n\t}, [roomList]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('request', ({ fromUser, confirm, roomID }: any) => {\r\n\t\t\tsetConfirm({ type: confirm, username: fromUser, roomID: roomID });\r\n\t\t});\r\n\t}, [request]);\r\n\r\n\tconst handleRightClick = (name: string) => {\t// 유저에게 match 요청\r\n\r\n\t\tif (name !== User[0].username) {\r\n\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: name, confirm: confirm.type }, () => {\r\n\t\t\t\tloadUser();\r\n\t\t\t\tsetRequest(!request);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (confirm.type === 'receive') {\r\n\t\t\tlet check = window.confirm(confirm.username + '의 요청을 수락하시겠습니까?');\r\n\r\n\t\t\tif (check) {\r\n\t\t\t\tsocket.emit('requestMatch', { fromUser: User[0].username, toUser: confirm.username, confirm: 'receive' }, () => {\r\n\t\t\t\t\t//setConfirm({type: '', username: null});\r\n\t\t\t\t\tsetRequest(!request);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else if (confirm.type === 'start') {\r\n\t\t\thistory.push(`/game?roomID=${confirm.roomID}&username=${confirm.username}`);\r\n\t\t\t//window.location.assign(`/game?roomID=${confirm.roomID}&username=${confirm.username}`);\r\n\t\t}\r\n\t}, [confirm]);\r\n\r\n\tconst soloPlay = () => {\r\n\t\thistory.push('/game/solo');\r\n\t}\r\n\r\n\tconst signOut = async () => {\r\n    await axios\r\n      .post(`/api/auth/logout`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        cookies.access_token = null;\r\n\r\n        alert(\"로그아웃 되었습니다.\");\r\n\t\t\t\t\r\n\t\t\t\thistory.push('/');\r\n\t\t\t\t\r\n\t\t\t\treturn () => {\r\n\t\t\t\t\tsocket.emit('disconnect');\r\n\t\t\r\n\t\t\t\t\tsocket.off();\r\n\t\t\t\t}\r\n      })\r\n      .catch((error) => {\r\n\t\t\t\talert(error.response.data.message);\r\n      });\r\n  };\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', width: '75%', height: '32rem', float: 'left', border: '2px solid black' }}>\r\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\troomList.length ? roomList.map(room => {\r\n\t\t\t\t\t\t\treturn (<li className=\"list-group-item\">Room {room.id}</li>)\r\n\t\t\t\t\t\t}) : <li className=\"list-group-item\">생성된 방이 없습니다.</li>\r\n\t\t\t\t\t}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ marginTop: '5%', width: '16%', height: '8rem', float: 'left', borderTop: '2px solid black', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\r\n\t\t\t\t{User.length && <div>\r\n\t\t\t\t\t<div>{User[0].username}</div>\r\n\t\t\t\t\t<div>Win: {User[0].win}</div>\r\n\t\t\t\t\t<div>Lose: {User[0].lose}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t<div style={{ width: '16%', height: '24rem', float: 'left', borderRight: '2px solid black', borderBottom: '2px solid black', textAlign: 'center' }}>\r\n\t\t\t\t<ul className=\"list-group\" style={{ overflow: 'auto' }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tuserList.map(user => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t{user.name}\r\n\t\t\t\t\t\t\t\t\t</button>{/*\r\n\t\t\t\t\t\t\t\t\t<ContextMenuTrigger id=\"same_unique_identifier\">\r\n\t\t\t\t\t\t\t\t\t\t<div style={{ height: '1.6rem' }}>{user.name}</div>\r\n\t\t\t\t\t\t\t\t\t</ContextMenuTrigger>\r\n\t\t\t\t\t\t\t\t\t<ContextMenu id=\"same_unique_identifier\" style={{ border: '0.5px solid black' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t대국 신청\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t<MenuItem >\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => handleRightClick(user.name)} style={{ borderBottom: '0.5px solid black', width: '6rem', backgroundColor: '#fffff1' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t정보 보기\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t</ContextMenu> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ marginLeft: '5%', width: '100%' }}>\r\n\t\t\t\t<div style={{ marginRight: '5%', float: 'right', width: '15%' }}>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={soloPlay}>혼자두기</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ marginRight: '5%', float: 'right', width: '15%' }}>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={signOut}>로그아웃</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Main;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\gameSolo.tsx",["207","208","209","210","211","212","213","214","215","216","217","218"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n\tButton,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\n\r\nimport lodash from 'lodash';\r\n\r\nimport Promotion from './promotion';\r\n\r\nimport useObjects from '../../hooks/useObjects';\r\nimport useAddObject from '../../hooks/useAddObject';\r\nimport useChangeObject from '../../hooks/useChangeObject';\r\n\r\nimport black_king from '../../images/black_king.png';\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\nimport black_pawn from '../../images/black_pawn.png';\r\n\r\nimport white_king from '../../images/white_king.png';\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\nimport white_pawn from '../../images/white_pawn.png';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useUser from '../../hooks/useUser';\r\n\r\nimport useRemoveObject from '../../hooks/useRemoveObject';\r\nconst { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing } = require('./rootFinding');\r\n\r\nconst CELL_SIZE = 60;\r\nconst BOARD_SIZE = 8;\r\nconst boardWidth = CELL_SIZE * BOARD_SIZE;\r\n\r\nlet socket: any;\r\n\r\nlet grid = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n\t\treturn { click: 0, object: true, root: false, color: 0, image: '', status: '' }\r\n\t});\r\n});\r\n\r\nfor (var i = 0; i < BOARD_SIZE; i++) {\r\n\tgrid[0][i].object = false;\r\n\tgrid[1][i].object = false;\r\n\tgrid[6][i].object = false;\r\n\tgrid[7][i].object = false;\r\n\r\n\tgrid[0][i].color = 1;\r\n\tgrid[1][i].color = 1;\r\n\tgrid[6][i].color = -1;\r\n\tgrid[7][i].color = -1;\r\n}\r\n\r\nlet castling: any = [];\r\nlet inPassing: any = null;\r\n\r\nconst GameSolo = () => {\r\n\r\n\tconst removeObject = useRemoveObject();\r\n\tconst Objects = useObjects();\r\n\tconst addObject = useAddObject();\r\n\tconst changeObject = useChangeObject();\r\n\tconst [board, setBoard] = useState(grid);\r\n\tconst [turn, setTurn] = useState(1);\r\n\tconst [clicked, setClicked] = useState({ row: -1, col: -1 });\r\n\tconst [promotionColor, setPromotionColor] = useState('');\r\n\r\n\tlet history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Objects.length < 32) {\r\n\t\t\taddObject('king', 4, 0, black_king, false);\r\n\t\t\taddObject('queen', 3, 0, black_queen, false);\r\n\t\t\taddObject('rook', 0, 0, black_rook, false);\r\n\t\t\taddObject('rook', 7, 0, black_rook, false);\r\n\t\t\taddObject('knight', 1, 0, black_knight, false);\r\n\t\t\taddObject('knight', 6, 0, black_knight, false);\r\n\t\t\taddObject('bishop', 2, 0, black_bishop, false);\r\n\t\t\taddObject('bishop', 5, 0, black_bishop, false);\r\n\r\n\t\t\taddObject('king', 4, 7, white_king, true);\r\n\t\t\taddObject('queen', 3, 7, white_queen, true);\r\n\t\t\taddObject('rook', 0, 7, white_rook, true);\r\n\t\t\taddObject('rook', 7, 7, white_rook, true);\r\n\r\n\r\n\t\t\taddObject('knight', 1, 7, white_knight, true);\r\n\t\t\taddObject('knight', 6, 7, white_knight, true);\r\n\t\t\taddObject('bishop', 2, 7, white_bishop, true);\r\n\t\t\taddObject('bishop', 5, 7, white_bishop, true);\r\n\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\taddObject('pawn', i, 1, black_pawn, false);\r\n\t\t\t\taddObject('pawn', i, 6, white_pawn, true);\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log('reload');\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (turn > 1) {\r\n\t\t\tjudgeCheck();\r\n\t\t\tjudgePromotion();\r\n\t\t}\r\n\t}, [turn])\r\n\r\n\tconst clickControl = (rowIdx: number, colIdx: number) => {\r\n\t\tconsole.log(rowIdx, colIdx);\r\n\t\tlet grid = board;\r\n\t\t//let grid = lodash.cloneDeep(board);\r\n\r\n\t\tinit(grid, 'click', 0);\r\n\t\tinit(grid, 'image', '');\r\n\r\n\t\tif (grid[rowIdx][colIdx].root) { // 이동 가능한 루트를 클릭했을 시\r\n\t\t\tconst object: any = Objects.find((element) => { return element.y === clicked.row && element.x === clicked.col && element.lived });  // 선택했던 기물\r\n\r\n\t\t\t// 기물의 위치를 해당 위치로 수정\r\n\t\t\tconst destObject: any = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });  // 목적지의 기물\r\n\t\t\tlet objectName = '';\r\n\r\n\t\t\tif (destObject) {\r\n\t\t\t\tobjectName = destObject.name;\r\n\t\t\t\tchangeObject(destObject.id, colIdx, rowIdx, false, true, destObject.image, destObject.name);\r\n\t\t\t}\r\n\r\n\t\t\tif (grid[clicked.row][colIdx].status === 'inPassing') {\r\n\t\t\t\tconst inPassingObject: any = Objects.find((element) => { return element.y === clicked.row && element.x === inPassing.object.x && element.lived });  // 인파상으로 제거되는 기물\r\n\r\n\t\t\t\tif (inPassingObject) {\r\n\t\t\t\t\tconsole.log('pass:', inPassingObject);\r\n\t\t\t\t\tchangeObject(inPassingObject.id, null, null, false, true, inPassingObject.image, inPassingObject.name);\r\n\r\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].object = true;\r\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].root = false;\r\n\t\t\t\t\tgrid[clicked.row][inPassing.object.x].image = '';\r\n\r\n\t\t\t\t\tgrid[clicked.row][colIdx].status = '';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeObject(object.id, colIdx, rowIdx, true, true, object.image, object.name);\r\n\r\n\t\t\tif (object.name === 'pawn') {\r\n\t\t\t\tinPassing = { turn: turn, object: object };\r\n\t\t\t} else {\r\n\t\t\t\tinPassing = { turn: turn, object: null };\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif (castling.length) {\r\n\t\t\t\tlet check: boolean = true;\r\n\t\t\t\tif (castling[0].name === 'king') {\r\n\t\t\t\t\tcheck = window.confirm('캐슬링 하시겠습니까?');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (check) {\r\n\t\t\t\t\tfor (let i = 0; i < castling.length; i++) {\r\n\t\t\t\t\t\tif (castling[i].checked) {\r\n\t\t\t\t\t\t\tif (castling[i].color === false) {\r\n\t\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].color = 1;\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].color = -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tgrid[castling[i].row][castling[i].col].object = false;\r\n\r\n\t\t\t\t\t\t\tconst tempObject: any = Objects.find((element) => { return element.id === castling[i].id });  // 캐슬링 대상의 기물\r\n\r\n\t\t\t\t\t\t\tconsole.log('log:', castling[i]);\r\n\r\n\t\t\t\t\t\t\tgrid[tempObject.y][tempObject.x].color = 0;\r\n\t\t\t\t\t\t\tgrid[tempObject.y][tempObject.x].object = true;\r\n\r\n\t\t\t\t\t\t\tchangeObject(castling[i].id, castling[i].col, castling[i].row, true, true, castling[i].image, castling[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tgrid[clicked.row][clicked.col].object = true;\r\n\t\t\tgrid[clicked.row][clicked.col].color = 0;\r\n\t\t\tgrid[rowIdx][colIdx].object = false;\r\n\r\n\t\t\tif (!object.color) {\r\n\t\t\t\tgrid[rowIdx][colIdx].color = 1;\r\n\t\t\t} else {\r\n\t\t\t\tgrid[rowIdx][colIdx].color = -1;\r\n\t\t\t}\r\n\r\n\t\t\tif (objectName === 'king') {\r\n\t\t\t\talert('game set');\r\n\t\t\t}\r\n\r\n\t\t\tsetTurn(turn + 1);\r\n\r\n\t\t\tinit(grid, 'root', false);\r\n\r\n\t\t\tcastling = [];\r\n\t\t} else {\r\n\t\t\tgrid[rowIdx][colIdx].click++;\r\n\r\n\t\t\t//setBoard([...grid]);\r\n\r\n\t\t\tconst object = Objects.find((element) => { return element.y === rowIdx && element.x === colIdx && element.lived });\r\n\r\n\t\t\t//console.log(object);\r\n\r\n\t\t\tcastling = [];\r\n\r\n\t\t\tsetClicked({ row: rowIdx, col: colIdx });\r\n\t\t\tsearchRoot(object, 'searchRoot');\r\n\t\t}\r\n\t}\r\n\r\n\tconst init = (object: any, attr: any, value: any) => {\r\n\t\tfor (var i = 0; i < BOARD_SIZE; i++) {\r\n\t\t\tfor (var j = 0; j < BOARD_SIZE; j++) {\r\n\t\t\t\tif (object[i][j][attr]) {\r\n\t\t\t\t\tobject[i][j][attr] = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst judgePromotion = () => {\r\n\t\tconst object = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\r\n\t\tif (object) {\r\n\t\t\tif (!object.color) {\r\n\t\t\t\talert('흑 승급');\r\n\t\t\t\tsetPromotionColor('black');\r\n\t\t\t} else {\r\n\t\t\t\talert('백 승급');\r\n\t\t\t\tsetPromotionColor('white');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst searchRoot = async (object: any, type: any) => {\r\n\t\tlet searchBoard = lodash.cloneDeep(board);\r\n\r\n\t\tinit(searchBoard, 'root', false);\r\n\r\n\t\tlet color: number = 0;\r\n\t\tlet initPos = 0;\r\n\t\tlet dir: any;\r\n\r\n\t\tif (object.color) {\r\n\t\t\tcolor = -1;\r\n\t\t\tinitPos = 7;\r\n\t\t} else {\r\n\t\t\tinitPos = 0;\r\n\t\t\tcolor = 1;\r\n\t\t}\r\n\r\n\t\tswitch (object.name) {\r\n\t\t\tcase 'pawn':\r\n\t\t\t\tsearchBoard = rootPawn(object, initPos, color, searchBoard, type);\r\n\r\n\t\t\t\tif (type === 'searchRoot')\r\n\t\t\t\t\tsearchBoard = rootInPassing(object, searchBoard, inPassing);\r\n\t\t\t\t// 앙파상, 승진 구현\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'knight':\r\n\t\t\t\tsearchBoard = rootKnight(object, color, searchBoard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'rook':\r\n\t\t\t\tdir = [[-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\r\n\t\t\t\tsearchBoard = checkCastling(object, Objects, searchBoard, castling);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bishop':\r\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1]];\r\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'king':\r\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\r\n\t\t\t\tsearchBoard = rootKing(dir, object, color, searchBoard);\r\n\r\n\t\t\t\tsearchBoard = checkCastling(object, Objects, searchBoard, castling);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'queen':\r\n\t\t\t\tdir = [[-1, -1], [1, 1], [-1, 1], [1, -1], [-1, 0], [1, 0], [0, 1], [0, -1]];\r\n\t\t\t\tsearchBoard = rootFromDir(dir, object, color, searchBoard);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (type === 'searchRoot') {\r\n\t\t\tsetBoard([...searchBoard]);\r\n\t\t\treturn null;\r\n\t\t} else if (type === 'judgeCheck') {\r\n\t\t\treturn searchBoard;\r\n\t\t}\r\n\t}\r\n\r\n\t// 본인의 턴에 체크 상태인지 확인하는 함수\r\n\tconst judgeCheck = async () => {\r\n\t\tlet checkBoard = Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n\r\n\r\n\t\t\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, idx) => {\r\n\t\t\t\treturn { root: false }\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst king: any = Objects.find((element) => { return element.name === 'king' && turn % 2 === 1 ? element.color === false : element.color === true });\r\n\r\n\t\tconst objects: any = Objects.filter(element => turn % 2 === 1 ? element.color === true && element.lived : element.color === false && element.lived);\r\n\r\n\t\tawait objects.map(async (element: any) => {\r\n\t\t\tlet tBoard: any = await searchRoot(element, 'judgeCheck');\r\n\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\tfor (let j = 0; j < 8; j++) {\r\n\t\t\t\t\tif (tBoard[i][j].root) {\r\n\t\t\t\t\t\tcheckBoard[i][j].root = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (checkBoard[king.y][king.x].root) {\r\n\t\t\talert('check!');\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkDisabled = (rowIdx: number, colIdx: number) => {\r\n\t\tif (board[rowIdx][colIdx].object) {\r\n\t\t\tif (board[rowIdx][colIdx].root) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (board[rowIdx][colIdx].root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif ((board[rowIdx][colIdx].color === 1 && (turn % 2) === 1) || (board[rowIdx][colIdx].color === -1 && (turn % 2) === 0)) {\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkColor = (color: string, rowIdx: number, colIdx: number) => {\r\n\t\tif (board[rowIdx][colIdx].root) {\r\n\t\t\treturn '#cccccc';\r\n\t\t} else {\r\n\t\t\treturn color;\r\n\t\t}\r\n\t}\r\n\r\n\tconst backToHome = () => {\r\n\t\tObjects.map(object => {\r\n\t\t\tremoveObject(object.id);\r\n\t\t})\r\n\r\n\t\thistory.push('/home');\r\n\t}\r\n\r\n\tconst selectPromotion = (object: any): void => {\r\n\t\t//console.log('select image:', object);\r\n\r\n\t\tconst pawn: any = Objects.find((element) => { return (element.y === 0 || element.y === 7) && element.name === 'pawn' && element.lived });\r\n\t\t\r\n\t\tchangeObject(pawn.id, pawn.x, pawn.y, true, true, object.image, object.name);\r\n\r\n\t\tsetPromotionColor('');\r\n\t}\r\n\r\n\tconst selectImage = (object: any, rowIdx: number, colIdx: number) => {\r\n\t\tif (object) {\r\n\t\t\treturn object.image;\r\n\t\t} else {\r\n\t\t\treturn board[rowIdx][colIdx].image;\r\n\t\t}\r\n\t}\r\n\r\n\tconst renderBoard = () => {\r\n\t\treturn Array.apply(null, Array(BOARD_SIZE)).map((el, rowIdx) => {\r\n\t\t\tlet cellList = Array.apply(null, Array(BOARD_SIZE)).map((el, colIdx) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{(rowIdx + colIdx) % 2 === 0 ? <button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#ffcc66', rowIdx, colIdx), border: '1px solid black' }}>\r\n\t\t\t\t\t\t\t{Objects.map(object => { // 오브젝트 32개 탐색\r\n\t\t\t\t\t\t\t\tif (object.x === colIdx && object.y === rowIdx && object.lived) {\r\n\t\t\t\t\t\t\t\t\treturn <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t{checkColor('#ffcc66', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\r\n\t\t\t\t\t\t\t\t<Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\r\n\t\t\t\t\t\t</button> :\r\n\t\t\t\t\t\t\t<button onClick={() => clickControl(rowIdx, colIdx)} disabled={promotionColor !== '' || checkDisabled(rowIdx, colIdx)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: checkColor('#996600', rowIdx, colIdx), border: '1px solid black' }}>\r\n\t\t\t\t\t\t\t\t{Objects.map(object => { // 오브젝트 32개 탐색\r\n\t\t\t\t\t\t\t\t\tif (object.x === colIdx && object.y === rowIdx && object.lived) {\r\n\t\t\t\t\t\t\t\t\t\treturn <Image src={selectImage(object, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t{checkColor('#996600', rowIdx, colIdx) === '#cccccc' && board[rowIdx][colIdx].object &&\r\n\t\t\t\t\t\t\t\t\t<Image src={selectImage(null, rowIdx, colIdx)} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px', opacity: '30%' }} />}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t});\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={rowIdx}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: boardWidth,\r\n\t\t\t\t\t\theight: CELL_SIZE,\r\n\t\t\t\t\t\tdisplay: 'flex',\r\n\t\t\t\t\t\talignItems: 'flex-start'\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{cellList}\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', float: 'left' }}>\r\n\t\t\t\t{renderBoard()}\r\n\t\t\t</div>\r\n\t\t\t<div style={{ marginLeft: '5%', marginTop: '5%', float: 'left', width: '30%', textAlign: 'center' }}>\r\n\t\t\t\t<div style={{ height: '5rem' }}>\r\n\t\t\t\t\t{turn % 2 === 1 ? <div style={{ fontSize: '1.5rem' }}>BLACK TURN {turn}</div> : <div style={{ fontSize: '1.5rem' }}>WHITE TURN {turn}</div>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ textAlign: 'center', fontSize: '1.2rem' }}>\r\n\t\t\t\t\tBlack&nbsp;&nbsp;Dead\r\n        </div>\r\n\t\t\t\t<div style={{ textAlign: 'center', height: '5rem' }}>\r\n\r\n\t\t\t\t\t{Objects.map(object => {\r\n\t\t\t\t\t\tif (!object.lived && !object.color) {\r\n\t\t\t\t\t\t\treturn <img src={object.image} style={{ width: '25px', height: '30px', paddingRight: '3px' }} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ textAlign: 'center', fontSize: '1.2rem' }}>\r\n\t\t\t\t\tWhite Dead\r\n        </div>\r\n\t\t\t\t<div style={{ textAlign: 'center', height: '5rem' }}>\r\n\t\t\t\t\t{Objects.map(object => {\r\n\t\t\t\t\t\tif (!object.lived && object.color) {\r\n\t\t\t\t\t\t\treturn <img src={object.image} style={{ width: '25px', height: '30px', paddingRight: '3px' }} />\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{ height: '10rem' }}>\r\n\t\t\t\t\t<Promotion color={promotionColor} selectPromotion={selectPromotion}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button variant=\"dark\" onClick={backToHome}>뒤로 가기</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default GameSolo;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\hooks\\useRemoveObject.tsx",[],"C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\rootFinding.tsx",["219","220"],"import { Component } from 'react';\r\n\r\nconst BOARD_SIZE = 8;\r\n\r\nconst rootPawn = (object: any, initPos: number, color: number, grid: any, type: string) => {\r\n\tif (type === 'searchRoot') {\r\n\t\tif (object.y == initPos + 1 * color) {\r\n\t\t\tif (grid[object.y + 2 * color][object.x].object && grid[object.y + 1 * color][object.x].object) {\r\n\t\t\t\tgrid[object.y + 2 * color][object.x].root = true;\r\n\t\t\t\tgrid[object.y + 2 * color][object.x].image = object.image;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isInside(object.y + 1 * color, object.x) && grid[object.y + 1 * color][object.x].object) {\r\n\t\t\tgrid[object.y + 1 * color][object.x].root = true;\r\n\t\t\tgrid[object.y + 1 * color][object.x].image = object.image;\r\n\t\t}\r\n\t}\r\n\tif (isInside(object.y + 1 * color, object.x + 1) && !grid[object.y + 1 * color][object.x + 1].object && grid[object.y + 1 * color][object.x + 1].color === -1 * color) {\r\n\t\tgrid[object.y + 1 * color][object.x + 1].root = true;\r\n\t\tgrid[object.y + 1 * color][object.x + 1].image = object.image;\r\n\t}\r\n\tif (isInside(object.y + 1 * color, object.x - 1) && !grid[object.y + 1 * color][object.x - 1].object && grid[object.y + 1 * color][object.x - 1].color === -1 * color) {\r\n\t\tgrid[object.y + 1 * color][object.x - 1].root = true;\r\n\t\tgrid[object.y + 1 * color][object.x - 1].image = object.image;\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootKnight = (object: any, color: number, grid: any) => {\r\n\tlet dir_first = [[-1, 0], [0, 1], [1, 0], [0, -1]];\r\n\tlet dir_second = [[-1, -1], [-1, 1], [1, 1], [1, -1]];\r\n\r\n\tfor (var i = 0; i < dir_first.length; i++) {\r\n\t\tfor (var cnt: number = 0; cnt < 2; cnt++) {\r\n\t\t\tvar j: number = i + cnt;\r\n\t\t\tif (j === 4) {\r\n\t\t\t\tj -= 4;\r\n\t\t\t}\r\n\t\t\tif (isInside(object.y + dir_first[i][0] + dir_second[j][0], object.x + dir_first[i][1] + dir_second[j][1])) {\r\n\t\t\t\tif (!grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].object) {\r\n\t\t\t\t\tif (grid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].color === -1 * color) {\r\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n\t\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].root = true;\r\n\t\t\t\t\tgrid[object.y + dir_first[i][0] + dir_second[j][0]][object.x + dir_first[i][1] + dir_second[j][1]].image = object.image;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootFromDir = (dir: any, object: any, color: number, grid: any) => {\r\n\tfor (var i = 0; i < dir.length; i++) {\r\n\t\tvar cnt = 1;\r\n\t\twhile (isInside(object.y + dir[i][0] * cnt, object.x + dir[i][1] * cnt)) {\r\n\t\t\t// 기물이 존재하고 같은 색일때,\r\n\t\t\tif (!grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].object) {\r\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === color) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tif (grid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].color === -1 * color) {\r\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n\t\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].root = true;\r\n\t\t\t\tgrid[object.y + dir[i][0] * cnt][object.x + dir[i][1] * cnt].image = object.image;\r\n\t\t\t}\r\n\t\t\tcnt++;\r\n\t\t}\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\nconst rootKing = (dir: any, object: any, color: number, grid: any) => {\r\n\tfor (var i = 0; i < dir.length; i++) {\r\n\t\tif (isInside(object.y + dir[i][0], object.x + dir[i][1])) {\r\n\t\t\tif (!grid[object.y + dir[i][0]][object.x + dir[i][1]].object) {\r\n\t\t\t\tif (grid[object.y + dir[i][0]][object.x + dir[i][1]].color === -1 * color) {\r\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n\t\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].root = true;\r\n\t\t\t\tgrid[object.y + dir[i][0]][object.x + dir[i][1]].image = object.image;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn grid;\r\n}\r\n\r\nconst checkCastling = (object: any, Objects: any, grid: any, castling: any) => {\r\n\tif (object.name === 'rook' && !object.isMoved) {\t// 룩 기준 -> 움직인 적 없이 초기 위치일시\r\n\t\tif (!object.color && object.y === 0 && (object.x === 0 || object.x === 7)) {\t// 블랙\r\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\r\n\t\t\tif (!king.isMoved && king.y === 0 && king.x === 4) {\r\n\t\t\t\tif (object.x === 0) {\r\n\t\t\t\t\tfor (let i = 1; i < 4; i++) {\r\n\t\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === 0 && element.x === object.x + i });\r\n\t\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 2, color: object.color });\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 1; i < 3; i++) {\r\n\t\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === 0 && element.x === object.x - i });\r\n\t\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 0, col: 6, color: object.color });\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (object.color && object.y === 7 && (object.x === 0 || object.x === 7)) {\t// 화이트\r\n\t\t\tconst king: any = Objects.find((element:any) => { return element.name === 'king' && element.color === object.color });\r\n\t\t\tif (!king.isMoved && king.y === 7 && king.x === 4) {\r\n\t\t\t\tif (object.x === 0) {\r\n\t\t\t\t\tfor (let i = 1; i < 4; i++) {\r\n\t\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === 7 && element.x === object.x + i });\r\n\t\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 2, color: object.color });\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 1; i < 3; i++) {\r\n\t\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === 7 && element.x === object.x - i });\r\n\t\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\t\treturn grid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcastling.push({ checked: true, id: king.id, name: 'king', row: 7, col: 6, color: object.color });\r\n\r\n\t\t\t\t\treturn grid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (object.name === 'king' && !object.isMoved) {\r\n\t\tconst rook: any = Objects.filter((element:any) => element.name === 'rook' && element.color === object.color && !element.isMoved);\r\n\t\tfor (let i = 0; i < rook.length; i++) {\r\n\t\t\tif (rook[i].x === 7) {\r\n\t\t\t\tlet isBlanked = true;\r\n\t\t\t\tfor (let i = 1; i < 3; i++) {\r\n\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === object.y && element.x === object.x + i });\r\n\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\tisBlanked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (isBlanked) {\r\n\t\t\t\t\tgrid[object.y][object.x + 2].root = true;\r\n\t\t\t\t\tgrid[object.y][object.x + 2].image = object.image;\r\n\t\t\t\t\tcastling.push({ checked: true, id: rook[i].id, name: 'rook', row: object.y, col: object.x + 1, color: object.color });\r\n\t\t\t\t}\r\n\t\t\t} else if (rook[i].x === 0) {\r\n\t\t\t\tlet isBlanked = true;\r\n\t\t\t\tfor (let i = 1; i < 4; i++) {\r\n\t\t\t\t\tconst temp: any = Objects.find((element:any) => { return element.y === object.y && element.x === object.x - i });\r\n\t\t\t\t\tif (temp) {\r\n\t\t\t\t\t\tisBlanked = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (isBlanked) {\r\n\t\t\t\t\tgrid[object.y][object.x - 2].root = true;\r\n\t\t\t\t\tgrid[object.y][object.x - 2].image = object.image;\r\n\t\t\t\t\tcastling.push({ checked: true, id: rook[i].id, name: 'rook', row: object.y, col: object.x - 1, color: object.color });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn grid;\r\n\t}\r\n\treturn grid;\r\n}\r\n\r\n// 앙 파상을 탐색하는 함수\r\nconst rootInPassing = (object: any, searchBoard: any, inPassing: any) => {\r\n\tif (inPassing && inPassing.object && !inPassing.object.isMoved && object.name === 'pawn') {\t// 바로 이전 턴에 움직인, 처음 움직인 폰에 한해서 적용\r\n\t\tif (!inPassing.object.color) {\t//블랙\r\n\r\n\t\t\tif (object.y === inPassing.object.y + 2) {\r\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x + 1].image = object.image;\r\n\r\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\r\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y - 1][object.x - 1].image = object.image;\r\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (object.y === inPassing.object.y - 2) {\r\n\t\t\t\tif (object.x === inPassing.object.x - 1) {\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x + 1].image = object.image;\r\n\r\n\t\t\t\t\tsearchBoard[object.y][object.x + 1].status = 'inPassing';\r\n\t\t\t\t} else if (object.x === inPassing.object.x + 1) {\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].root = true;\r\n\t\t\t\t\tsearchBoard[object.y + 1][object.x - 1].image = object.image;\r\n\t\t\t\t\tsearchBoard[object.y][object.x - 1].status = 'inPassing';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn searchBoard;\r\n}\r\n\r\nconst isInside = (row: number, col: number) => {\r\n\treturn row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE;\r\n}\r\n\r\nmodule.exports = { rootPawn, rootKnight, rootFromDir, rootKing, checkCastling, rootInPassing }","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Game\\promotion.tsx",["221","222"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport {\r\n\tButton,\r\n\tImage,\r\n} from \"react-bootstrap\";\r\n\r\nimport black_queen from '../../images/black_queen.png';\r\nimport black_rook from '../../images/black_rook.png';\r\nimport black_knight from '../../images/black_knight.png';\r\nimport black_bishop from '../../images/black_bishop.png';\r\n\r\nimport white_queen from '../../images/white_queen.png';\r\nimport white_rook from '../../images/white_rook.png';\r\nimport white_knight from '../../images/white_knight.png';\r\nimport white_bishop from '../../images/white_bishop.png';\r\n\r\nconst CELL_SIZE = 60;\r\nconst BOARD_SIZE = 8;\r\n\r\nlet blackObjects = [\r\n\t{ image: black_queen, name: 'queen' },\r\n\t{ image: black_rook, name: 'rook' },\r\n\t{ image: black_knight, name: 'knight' },\r\n\t{ image: black_bishop, name: 'bishop' }\r\n];\r\nlet whiteObjects = [\r\n\t{ image: white_queen, name: 'queen' },\r\n\t{ image: white_rook, name: 'rook' },\r\n\t{ image: white_knight, name: 'knight' },\r\n\t{ image: white_bishop, name: 'bishop' }\r\n];\r\n\r\nconst Promotion = (props: any) => {\r\n\r\n\tconst [object, setObject] = useState();\r\n\r\n\tconst selectObject = (object: any) => {\r\n\t\tsetObject(object);\r\n\r\n\t\t//props.selectPromotion(object);\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif(object) {\r\n\t\t\tprops.selectPromotion(object);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.color === 'black' && <div>\r\n\t\t\t\t{blackObjects.map((element: any) => {\r\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\r\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t})}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button onClick={() => onSubmit()}variant=\"dark\" style={{width: '3rem', height:'2rem', marginTop: '1rem', textAlign: 'center', padding: '0rem'}}>승급</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>}\r\n\t\t\t{props.color === 'white' && <div>\r\n\t\t\t\t{whiteObjects.map((element: any) => {\r\n\t\t\t\t\treturn <button onClick={() => selectObject(element)} style={{ width: CELL_SIZE, height: CELL_SIZE, backgroundColor: '#dddddd', border: '1px solid black' }}>\r\n\t\t\t\t\t\t<Image src={element.image} style={{ width: CELL_SIZE - 10, height: CELL_SIZE - 10, paddingRight: '3px' }} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t})}\r\n\t\t\t</div>}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Promotion;","C:\\Users\\jinsm\\OneDrive\\Desktop\\Code\\ts-project\\ts-front\\src\\components\\Init\\signup.tsx",["223","224","225"],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"234","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"235","line":7,"column":3,"nodeType":"232","messageId":"233","endLine":7,"endColumn":9},{"ruleId":"236","severity":1,"message":"237","line":85,"column":19,"nodeType":"238","endLine":85,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":88,"column":19,"nodeType":"238","endLine":88,"endColumn":22},{"ruleId":"230","severity":1,"message":"239","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"240","line":9,"column":8,"nodeType":"232","messageId":"233","endLine":9,"endColumn":21},{"ruleId":"230","severity":1,"message":"241","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":14},{"ruleId":"230","severity":1,"message":"235","line":15,"column":3,"nodeType":"232","messageId":"233","endLine":15,"endColumn":9},{"ruleId":"230","severity":1,"message":"242","line":20,"column":10,"nodeType":"232","messageId":"233","endLine":20,"endColumn":20},{"ruleId":"230","severity":1,"message":"243","line":21,"column":10,"nodeType":"232","messageId":"233","endLine":21,"endColumn":13},{"ruleId":"230","severity":1,"message":"244","line":24,"column":9,"nodeType":"232","messageId":"233","endLine":24,"endColumn":15},{"ruleId":"230","severity":1,"message":"245","line":25,"column":9,"nodeType":"232","messageId":"233","endLine":25,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":109,"column":19,"nodeType":"238","endLine":109,"endColumn":22},{"ruleId":"230","severity":1,"message":"246","line":1,"column":38,"nodeType":"232","messageId":"233","endLine":1,"endColumn":49},{"ruleId":"230","severity":1,"message":"247","line":4,"column":8,"nodeType":"232","messageId":"233","endLine":4,"endColumn":12},{"ruleId":"230","severity":1,"message":"248","line":34,"column":10,"nodeType":"232","messageId":"233","endLine":34,"endColumn":31},{"ruleId":"230","severity":1,"message":"249","line":66,"column":9,"nodeType":"232","messageId":"233","endLine":66,"endColumn":16},{"ruleId":"230","severity":1,"message":"250","line":79,"column":10,"nodeType":"232","messageId":"233","endLine":79,"endColumn":16},{"ruleId":"230","severity":1,"message":"251","line":79,"column":18,"nodeType":"232","messageId":"233","endLine":79,"endColumn":27},{"ruleId":"252","severity":1,"message":"253","line":130,"column":6,"nodeType":"254","endLine":130,"endColumn":33,"suggestions":"255"},{"ruleId":"252","severity":1,"message":"256","line":161,"column":6,"nodeType":"254","endLine":161,"endColumn":17,"suggestions":"257"},{"ruleId":"252","severity":1,"message":"258","line":203,"column":6,"nodeType":"254","endLine":203,"endColumn":12,"suggestions":"259"},{"ruleId":"260","severity":1,"message":"261","line":299,"column":22,"nodeType":"262","messageId":"263","endLine":299,"endColumn":24},{"ruleId":"264","severity":1,"message":"265","line":357,"column":18,"nodeType":"232","messageId":"266","endLine":357,"endColumn":19},{"ruleId":"230","severity":1,"message":"267","line":435,"column":9,"nodeType":"232","messageId":"233","endLine":435,"endColumn":18},{"ruleId":"268","severity":1,"message":"269","line":458,"column":24,"nodeType":"270","messageId":"271","endLine":458,"endColumn":26},{"ruleId":"268","severity":1,"message":"272","line":473,"column":43,"nodeType":"270","messageId":"273","endLine":473,"endColumn":45},{"ruleId":"274","severity":1,"message":"275","line":475,"column":26,"nodeType":"238","endLine":475,"endColumn":143},{"ruleId":"268","severity":1,"message":"272","line":479,"column":46,"nodeType":"270","messageId":"273","endLine":479,"endColumn":48},{"ruleId":"274","severity":1,"message":"275","line":481,"column":28,"nodeType":"238","endLine":481,"endColumn":145},{"ruleId":"268","severity":1,"message":"272","line":520,"column":40,"nodeType":"270","messageId":"273","endLine":520,"endColumn":42},{"ruleId":"274","severity":1,"message":"275","line":522,"column":22,"nodeType":"238","endLine":522,"endColumn":123},{"ruleId":"268","severity":1,"message":"272","line":530,"column":40,"nodeType":"270","messageId":"273","endLine":530,"endColumn":42},{"ruleId":"274","severity":1,"message":"275","line":532,"column":22,"nodeType":"238","endLine":532,"endColumn":123},{"ruleId":"230","severity":1,"message":"235","line":3,"column":9,"nodeType":"232","messageId":"233","endLine":3,"endColumn":15},{"ruleId":"230","severity":1,"message":"276","line":18,"column":10,"nodeType":"232","messageId":"233","endLine":18,"endColumn":29},{"ruleId":"230","severity":1,"message":"277","line":20,"column":7,"nodeType":"232","messageId":"233","endLine":20,"endColumn":12},{"ruleId":"230","severity":1,"message":"278","line":21,"column":7,"nodeType":"232","messageId":"233","endLine":21,"endColumn":12},{"ruleId":"252","severity":1,"message":"279","line":55,"column":5,"nodeType":"254","endLine":55,"endColumn":7,"suggestions":"280"},{"ruleId":"274","severity":1,"message":"275","line":61,"column":6,"nodeType":"238","endLine":61,"endColumn":82},{"ruleId":"274","severity":1,"message":"275","line":67,"column":7,"nodeType":"238","endLine":67,"endColumn":83},{"ruleId":"226","replacedBy":"281"},{"ruleId":"228","replacedBy":"282"},{"ruleId":"230","severity":1,"message":"283","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":45},{"ruleId":"230","severity":1,"message":"284","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":14},{"ruleId":"230","severity":1,"message":"285","line":12,"column":10,"nodeType":"232","messageId":"233","endLine":12,"endColumn":17},{"ruleId":"230","severity":1,"message":"241","line":12,"column":19,"nodeType":"232","messageId":"233","endLine":12,"endColumn":23},{"ruleId":"230","severity":1,"message":"286","line":14,"column":8,"nodeType":"232","messageId":"233","endLine":14,"endColumn":19},{"ruleId":"230","severity":1,"message":"287","line":19,"column":10,"nodeType":"232","messageId":"233","endLine":19,"endColumn":21},{"ruleId":"230","severity":1,"message":"288","line":19,"column":23,"nodeType":"232","messageId":"233","endLine":19,"endColumn":31},{"ruleId":"230","severity":1,"message":"289","line":19,"column":33,"nodeType":"232","messageId":"233","endLine":19,"endColumn":51},{"ruleId":"230","severity":1,"message":"244","line":25,"column":8,"nodeType":"232","messageId":"233","endLine":25,"endColumn":14},{"ruleId":"252","severity":1,"message":"290","line":53,"column":5,"nodeType":"254","endLine":53,"endColumn":7,"suggestions":"291"},{"ruleId":"252","severity":1,"message":"292","line":76,"column":5,"nodeType":"254","endLine":76,"endColumn":38,"suggestions":"293"},{"ruleId":"252","severity":1,"message":"294","line":141,"column":5,"nodeType":"254","endLine":141,"endColumn":14,"suggestions":"295"},{"ruleId":"230","severity":1,"message":"296","line":30,"column":8,"nodeType":"232","messageId":"233","endLine":30,"endColumn":15},{"ruleId":"230","severity":1,"message":"297","line":39,"column":5,"nodeType":"232","messageId":"233","endLine":39,"endColumn":16},{"ruleId":"252","severity":1,"message":"298","line":103,"column":5,"nodeType":"254","endLine":103,"endColumn":7,"suggestions":"299"},{"ruleId":"252","severity":1,"message":"300","line":110,"column":5,"nodeType":"254","endLine":110,"endColumn":11,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":173,"column":45,"nodeType":"270","messageId":"304","endLine":173,"endColumn":98},{"ruleId":"268","severity":1,"message":"269","line":363,"column":22,"nodeType":"270","messageId":"271","endLine":363,"endColumn":24},{"ruleId":"268","severity":1,"message":"272","line":394,"column":28,"nodeType":"270","messageId":"273","endLine":394,"endColumn":30},{"ruleId":"268","severity":1,"message":"272","line":403,"column":29,"nodeType":"270","messageId":"273","endLine":403,"endColumn":31},{"ruleId":"268","severity":1,"message":"272","line":445,"column":26,"nodeType":"270","messageId":"273","endLine":445,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":447,"column":15,"nodeType":"238","endLine":447,"endColumn":104},{"ruleId":"268","severity":1,"message":"272","line":455,"column":26,"nodeType":"270","messageId":"273","endLine":455,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":457,"column":15,"nodeType":"238","endLine":457,"endColumn":104},{"ruleId":"230","severity":1,"message":"305","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":7,"column":16,"nodeType":"262","messageId":"263","endLine":7,"endColumn":18},{"ruleId":"230","severity":1,"message":"239","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"306","line":19,"column":7,"nodeType":"232","messageId":"233","endLine":19,"endColumn":17},{"ruleId":"230","severity":1,"message":"239","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"307","line":7,"column":10,"nodeType":"232","messageId":"233","endLine":7,"endColumn":20},{"ruleId":"230","severity":1,"message":"243","line":8,"column":10,"nodeType":"232","messageId":"233","endLine":8,"endColumn":13},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useChangeUser' is defined but never used.","'User' is defined but never used.","'useCookies' is defined but never used.","'set' is defined but never used.","'Logged' is assigned a value but never used.","'User' is assigned a value but never used.","'useCallback' is defined but never used.","'Cell' is defined but never used.","'isNotEmittedStatement' is defined but never used.","'addUser' is assigned a value but never used.","'dataIO' is assigned a value but never used.","'setDataIO' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Objects.length', 'User', 'addObject', and 'connected'. Either include them or remove the dependency array. You can also do a functional update 'setConnected(c => ...)' if you only need 'connected' in the 'setConnected' call.","ArrayExpression",["310"],"React Hook useEffect has a missing dependency: 'take'. Either include it or remove the dependency array. You can also do a functional update 'setTake(t => ...)' if you only need 'take' in the 'setTake' call.",["311"],"React Hook useEffect has missing dependencies: 'changeObject' and 'type'. Either include them or remove the dependency array.",["312"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-redeclare","'i' is already defined.","redeclared","'initState' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'isNonNullExpression' is defined but never used.","'black' is assigned a value but never used.","'white' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'x' and 'y'. Either include them or remove the dependency array. If 'setObject' needs the current value of 'y', you can also switch to useReducer instead of useState and read 'y' in the reducer.",["313"],["308"],["309"],"'unstable_renderSubtreeIntoContainer' is defined but never used.","'setConstantValue' is defined but never used.","'addUser' is defined but never used.","'queryString' is defined but never used.","'ContextMenu' is defined but never used.","'MenuItem' is defined but never used.","'ContextMenuTrigger' is defined but never used.","React Hook useEffect has a missing dependency: 'readCookie'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has a missing dependency: 'socketio'. Either include it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["315"],"React Hook useEffect has missing dependencies: 'User', 'history', and 'request'. Either include them or remove the dependency array. You can also do a functional update 'setRequest(r => ...)' if you only need 'request' in the 'setRequest' call.",["316"],"'useUser' is defined but never used.","'socket' is defined but never used.","React Hook useEffect has missing dependencies: 'Objects.length' and 'addObject'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'judgeCheck' and 'judgePromotion'. Either include them or remove the dependency array.",["318"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'castling'.","unsafeRefs","'Component' is defined but never used.","'BOARD_SIZE' is assigned a value but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},"Update the dependencies array to be: [ENDPOINT, Objects.length, User, addObject, connected, location.search]",{"range":"337","text":"338"},"Update the dependencies array to be: [connected, take]",{"range":"339","text":"340"},"Update the dependencies array to be: [changeObject, move, type]",{"range":"341","text":"342"},"Update the dependencies array to be: [x, y]",{"range":"343","text":"344"},"Update the dependencies array to be: [readCookie]",{"range":"345","text":"346"},"Update the dependencies array to be: [location.search, User, socketio]",{"range":"347","text":"348"},"Update the dependencies array to be: [User, confirm, history, request]",{"range":"349","text":"350"},"Update the dependencies array to be: [Objects.length, addObject]",{"range":"351","text":"352"},"Update the dependencies array to be: [judgeCheck, judgePromotion, turn]",{"range":"353","text":"354"},[4378,4405],"[ENDPOINT, Objects.length, User, addObject, connected, location.search]",[5198,5209],"[connected, take]",[6440,6446],"[changeObject, move, type]",[2717,2719],"[x, y]",[1625,1627],"[readCookie]",[2154,2187],"[location.search, User, socketio]",[3826,3835],"[User, confirm, history, request]",[3406,3408],"[Objects.length, addObject]",[3501,3507],"[judgeCheck, judgePromotion, turn]"]